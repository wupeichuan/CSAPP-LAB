#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	xorq %rax,%rax		# count = 0;
	iaddq $-1, %rdx
	andq %rdx,%rdx		# len <= 0?
	jle Done_1		# if so, goto Done:
	
Loop_1:	mrmovq (%rdi), %r10	# read val from src...
	mrmovq 8(%rdi), %r11
	rmmovq %r10, (%rsi)	# ...and store it to dst
	rmmovq %r11, 8(%rsi)	# ...and store it to dst
	andq %r10, %r10		# val_1 <= 0?
	jle Npos_1		# if so, goto Npos_1:
	iaddq $1, %rax		# count++
Npos_1:	
	andq %r11, %r11		# val_2 <= 0?
	jle Npos_2		# if so, goto Npos_1:
	iaddq $1, %rax
Npos_2:
	iaddq $-2, %rdx		# len--
	iaddq $16, %rdi		# src++
	iaddq $16, %rsi		# dst++
	andq %rdx,%rdx		# len > 0?
	jg Loop_1			# if so, goto Loop:
Done_1:
	iaddq $1, %rdx
	andq %rdx, %rdx
	jle Done
Loop_2:	
	mrmovq (%rdi), %r10	# read val from src...
	rmmovq %r10, (%rsi)	# ...and store it to dst
	andq %r10, %r10		# val <= 0?
	jle Npos_3		# if so, goto Npos:
	iaddq $1, %rax		# count++
Npos_3:	
	iaddq $-1, %rdx		# len--
	iaddq $8, %rdi		# src++
	iaddq $8, %rsi		# dst++
	andq %rdx,%rdx		# len > 0?
	jg Loop_2			# if so, goto Loop:
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
